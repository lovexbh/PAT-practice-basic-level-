//一个数组A中存有N（N>0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（M>=0）个位置，即将A中的数据由
（A0A1……AN-1）变换为（AN-M …… AN-1 A0 A1……AN-M-1）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据
的次数尽量少，要如何设计移动的方法？
//主要想法就是建立一个尽可能大的数组，先把整体向右移动m位，再把最后m位移到开头。仅需一个变量临时储存数据。
#include<stdio.h>
int main(){
	int m,n;
	scanf("%d %d",&n,&m);
	int num[200];
	for(int i=0;i<n;i++){
		scanf("%d",&num[i]);
	}
	int temp;//变换时暂存数据
	while(m>=n){//注意m的大小，题目没说m小于n
		m=m%n;
	} 
	if(m==0){
		for(int i=0;i<n-1;i++){
			printf("%d ",num[i]);
		}
		printf("%d",num[n-1]);
	}
	else{
		for(int i=n-1;i>=0;i--){//整体右移最好从右开始，因为右侧的数据不受影响。
			temp=num[i];
			num[i]=num[i+m];
			num[i+m]=temp; 
		}
		for(int i=0;i<m;i++){
			temp=num[i];
			num[i]=num[i+n];
			num[i+n]=temp;
		}
		for(int i=0;i<n-1;i++){
			printf("%d ",num[i]);
		}
		printf("%d",num[n-1]);
	}
	return 0;
} 
