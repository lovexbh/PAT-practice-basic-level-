//每次 PAT 考试结束后，考试中心都会发布一个考生单位排行榜。本题就请你实现这个功能。
//本题主要难点在于算法的效率，用最简单的遍历时间复杂度为n²，会超时，所以先排一次序，把名称类似的放在一起就只要遍历一次数组就行。
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct student{
	int score;
	char school[7];
	int num;
	double grade;
	int rank;
}stu;
int cmp(const void *a,const void *b){
	stu *p=(struct student*)a;
	stu *q=(struct student*)b;
	if(p->score!=q->score){
		return (q->score)-(p->score);
	}
	else if(p->num!=q->num){
		return (p->num)-(q->num);
	}
	else if(p->school[0]!=q->school[0]){
		return (p->school[0])-(q->school[0]);
	}
	else if(p->school[1]!=q->school[1]){
		return (p->school[1])-(q->school[1]);
	}
	else if(p->school[2]!=q->school[2]){
		return (p->school[2])-(q->school[2]);
	}
	else if(p->school[3]!=q->school[3]){
		return (p->school[3])-(q->school[3]);
	}
	else if(p->school[4]!=q->school[4]){
		return (p->school[4])-(q->school[4]);
	}
	else if(p->school[5]!=q->school[5]){
		return (p->school[5])-(q->school[5]);
	}
}
int main(){
	int n;
	int cnt=0;
	int CNT=0;
	scanf("%d",&n);
	static stu k[100001],k1[100001];
	long long int d[100001];
	int a;
	char b[7];
	char c[7];
	double g;
	for(int i=0;i<n;i++){
		int flag=1;
		int pian=0;
		int e=1;
		scanf("%s %d %s",&b,&a,&c);
		int len=strlen(c);
		for(int j=0;j<len;j++){
			if(c[j]>='A'&&c[j]<='Z'){
				c[j]=c[j]-'A'+'a';
			}
		}
		if(b[0]=='B'){
			g=a/1.5;
		}
		if(b[0]=='A'){
			g=a*1.0;
		}
		if(b[0]=='T'){
			g=a*1.5;
		}
		k[i].grade=g;
		k[i].score=0;
		k[i].num=1;
		for(int j=0;j<len;j++){
			k[i].school[j]=c[j];
		}
		cnt++;
	}
	qsort(k,cnt,sizeof(k[0]),cmp);
	for(int i=0;i<cnt;i++){
		if(i==0){
			k1[CNT]=k[i];
			CNT++;
		}
		else{
			if(strcmp(k[i].school,k[i-1].school)==0){
				k1[CNT-1].num++;
				k1[CNT-1].grade+=k[i].grade;
			}
			else{
				k1[CNT]=k[i];
				CNT++;
			}
		}
	}
	printf("%d\n",CNT);
	for(int i=0;i<CNT;i++){
		k1[i].score=(int)k1[i].grade;
	}
	qsort(k1,CNT,sizeof(k1[0]),cmp);
	for(int i=0;i<CNT;i++){
		if(i==0){
			k1[i].rank=1;
		}
		if(i>0){
			if(k1[i].score==k1[i-1].score){
				k1[i].rank=k1[i-1].rank;
			}
			else{
				k1[i].rank=i+1;
			}
		}
		printf("%d %s %d %d\n",k1[i].rank,k1[i].school,k1[i].score,k1[i].num);
	}
	return 0;
}
