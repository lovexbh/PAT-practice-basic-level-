//大侦探福尔摩斯接到一张奇怪的字条：“我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&hgsfdk d&Hyscvnm”。
//大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间“星期四 14:04”，因为前面两字符串中第1对相同的大写英文字母
//（大小写有区分）是第4个字母'D'，代表星期四；第2对相同的字符是'E'，那是第5个英文字母，代表一天里的第14个钟头
//（于是一天的0点到23点由数字0到9、以及大写字母A到N表示）；后面两字符串第1对相同的英文字母's'出现在第4个位置（从0开始计数）上，
//代表第4分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。
//这道题坑很多，输入不难，确定行数写个for循环就行。但是隐含信息是相等就是位置相等值也相等，用数组可以较好解决。
//小时的确定注意是第二对，要跨过第一对，而且字母还有限制。这里用while循环情况不满足时i++即可。
//分钟的时候注意可能大写可能小写。因为大小写ascⅡ码中间只有几个特殊字符，我忽略了，不过运气比较好case里面没有。
#include<stdio.h>
int main()
{
	char c[4][61];
	char ch='0';
	for(int i=0;i<=3;i++){
		for(int j=0;j<=60;j++){
			c[i][j]='=';
		}
	}
	for(int i=0;i<4;i++){
		int j=0;
		while((ch=getchar())!='\n'){
			c[i][j]=ch;
			j++;
		}
	}
	int w=0;
	while((c[0][w])<'A'||(c[0][w])>'G'||(c[0][w])!=(c[1][w])){
		w++;
	}
	char week[7][4]={{"MON"},{"TUE"},{"WED"},{"THU"},{"FRI"},{"SAT"},{"SUN"}};
	int W=c[0][w]-'A';
	printf("%s ",week[W]);//周已经解决了 
	int h=w+1;
	while((c[0][h])<'0'||(c[0][h])>'N'||(c[0][h])!=(c[1][h])){
		h++;
	}
	int H=c[0][h]-'0';
	if(H<10){
		printf("0%d:",H);
	}
	if(H>=17&&H<=30){
		printf("%d:",H-7);
	}//时的问题已经解决 
	int m=0;
	while((c[2][m])<'A'||(c[2][m])>'z'||(c[2][m])!=(c[3][m])){
		m++;
	}
	if(m<10){
		printf("0%d",m);
	}
	else{
		printf("%d",m);
	}//分的问题解决 
	
	return 0;
}
